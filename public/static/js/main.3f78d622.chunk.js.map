{"version":3,"sources":["components/LaunchItem.jsx","components/MissionKey.jsx","components/Launches.jsx","components/Launch.jsx","App.js","index.js","logo.svg"],"names":["LaunchItem","props","launch","flight_number","mission_name","launch_date_local","launch_success","className","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","console","log","launches","map","key","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","class","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","src","logo","alt","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3f78d622.chunk.js","sourcesContent":["import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const LaunchItem = (props) => {\r\n    const { launch: { flight_number, mission_name, launch_date_local, launch_success} } = props;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__upper\">\r\n                <h4 className=\"card-title\">Mission: <span className={launch_success ? \"text-success\" : \"text-failure\"}>{ mission_name }</span></h4>\r\n                <p className=\"card-tag\">Date: <Moment format=\"MMMM Do, YYYY\">{ launch_date_local }</Moment></p>\r\n                <p className=\"card-tag\">Time: <Moment format=\"HH:mm a\">{ launch_date_local }</Moment></p>\r\n            </div>\r\n\r\n            <Link to={`/launch/${flight_number}`} className=\"card-button\">Launch Details <i className=\"fas fa-long-arrow-alt-right\"></i></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MissionKey = () => {\r\n    return (\r\n        <div className=\"info\">\r\n            <p>\r\n                <span className=\"info-circle bg-success\"></span>Success\r\n            </p>\r\n            <p>\r\n                <span className=\"info-circle bg-failure\"></span>Failure\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nimport { LaunchItem } from './LaunchItem';\r\nimport { MissionKey } from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query LaunchesQuery{\r\n        launches{\r\n            flight_number,\r\n            mission_name,\r\n            launch_date_local,\r\n            launch_success,\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Launches = () => {\r\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) console.log(error);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"heading\">All Launches</h1>\r\n            <MissionKey />\r\n            <section className=\"card-grid\">\r\n                {\r\n                    data.launches.map(launch => (\r\n                        <LaunchItem key={launch.flight_number} launch={launch}></LaunchItem>\r\n                    ))\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number: Int!){\r\n        launch(flight_number: $flight_number){\r\n            flight_number,\r\n            mission_name,\r\n            launch_year,\r\n            launch_date_local,\r\n            launch_success,\r\n            rocket{\r\n                rocket_id,\r\n                rocket_name,\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Launch = (props) => {\r\n    let { flight_number } = props.match.params;\r\n    flight_number = parseInt(flight_number)\r\n\r\n    const { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n        variables: { flight_number }\r\n    });\r\n\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) console.log(error);\r\n\r\n    \r\n    const { \r\n        mission_name, \r\n        launch_year,\r\n        launch_date_local, \r\n        launch_success, \r\n        rocket: {\r\n            rocket_id, \r\n            rocket_name, \r\n            rocket_type\r\n        } \r\n    } = data.launch;\r\n\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <div className=\"launch-header\">\r\n                <h1>Mission: {mission_name}</h1>\r\n                <Link to=\"/\" className=\"back-button\"><i class=\"fas fa-long-arrow-alt-left\"></i>go back</Link>\r\n            </div>\r\n\r\n            <div className=\"group-1\">\r\n                <h4 className=\"group-heading\">Launch Details</h4>\r\n                <ul className=\"group-list\">\r\n                    <li>\r\n                        <span>Flight Number</span>\r\n                        <span>{flight_number}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Launch Year</span> \r\n                        <span>{launch_year}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Launch Date</span> \r\n                        <span><Moment format=\"MMMM Do\">{launch_date_local}</Moment></span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Successfull</span> \r\n                        <span className={launch_success ? \"text-success\": \"text-failure\"}>{launch_success ? 'Yes' : 'No'}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"group-2\">\r\n                <h4 className=\"group-heading\">Rocket Details</h4>\r\n                <ul className=\"group-list\">\r\n                    <li>\r\n                        <span>ID</span>\r\n                        <span>{rocket_id}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Name</span>\r\n                        <span>{rocket_name}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Type</span>\r\n                        <span>{rocket_type}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { Launches } from './components/Launches';\nimport { Launch } from './components/Launch';\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <div className=\"\">\n          <header className=\"header\">\n            <img src={logo} className=\"logo\" alt=\"space-x-logo\" />\n          </header>\n          <main className=\"main\">\n            <Switch>\n              <Route exact path=\"/\" component={Launches} ></Route>\n              <Route exact path=\"/launch/:flight_number\" component={Launch} ></Route>\n            </Switch>\n          </main>\n        </div>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.8c8aad80.svg\";"],"sourceRoot":""}